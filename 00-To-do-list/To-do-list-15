Create a AWS CloudFormation Jenkins Template to create a Stand Alone Jenkins server stack 
using a single EC2 instance with attaching another EBS volume mount on /var/lib/jenkins, 
for further using Jenkins to run Terraform, Shell and Python scripts on GitHub
When the input Snapshotid is not empty,  create volume from snapshot
- input paramters: InstanceType, VpcId, SubnetId, KeyName, SSHLocation, JenkinsPort,
                   SnapshotId, VolumeSize, PythonVersion, TerraformVersion
- output:          TemplateID, PublicIp, ServerAddress, JenkinsPass,JenkinsKey, InstanceID

Tasks:
1. Use VMware Workstaion to create two Centos8 VM as Jenkins master and worker, to test the distributed build process.
2. Write a user data script to mount volume, install Jenkins, Git, AWS CLI, Python, Boto3, Terraform etc. Key points:
- if SnapshotId is not empty, create volume from snapshot, there will be several different operations to Mount Volume and config Jenkins. 
  For example, we don't need to do fdisk, mkfs, e2label and generate SSH key.
- volume mount point: /var/lib/jenkins
3. From AWS CloudWatch Console, launch a Jenkins instance with the user data to test the process.
4. Create a AWS CloudFormation Template to create a Stand Alone Jenkins server
- Create a EBS volume and attach to a Jenkins Instance. 
- if SnapshotId is not empty, create volume from snapshot. The SnapshotId is the input SnapshotId, else set it to AWS::NoValue
- Add DeletionPolicy on Volume to make a Snapshot on Delete
- Modify user data script and add it to instance UserData property.
5. Test the template, input no SnapshotId first to create stack and then input SnapshotId for another test.




Reference:
- https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html
- http://beta.awsdocs.com/infrastructure_as_code/cloudformation/applications/jenkins_cf_deployment/ 
- https://read.acloud.guru/deploy-a-jenkins-cluster-on-aws-35dcf66a1eca 
- https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html



Pre-requisites
- Create a seperate Key pair for testing
- Download the pem key file
- Upload the pem file to ~/.ssh/ on the jumpbpx
- chmod 600 ~/.ssh/*.pem   https://www.linuxtopia.org/online_books/introduction_to_linux/linux_The_chmod_command.htm


Based on previous Terraform code, launch an EC2 instance with below settings:
- Image: centos/Amazon Linux 2 AMI (HVM), SSD Volume Type - ami-0ded330691a314693 (64-bit x86)
- Subnet: public subnet
- Public ip
- Security group:
  allow inbound tcp/80, 443 from 0.0.0.0/0
  allow all traffic from from jumpbox by referring jumpbox SG group id
- install Apache HTTP server using below user data script https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html

# Amazon Linux 2 AMI (HVM), SSD Volume Type - ami-0ded330691a314693 (64-bit x86)
#!/bin/bash
yum update -y
amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
yum install -y httpd mariadb-server
systemctl start httpd
systemctl enable httpd
usermod -a -G apache ec2-user
chown -R ec2-user:apache /var/www
chmod 2775 /var/www
find /var/www -type d -exec chmod 2775 {} \;
find /var/www -type f -exec chmod 0664 {} \;
echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php

- Output: public ip of the VM

- SSH to the new VM and check  httpd is running
  systemctl status httpd
- Try to access http://publicip of the VM



Challenge:
- Create an Route 53 record demo.dryovnne.net (A record) in ur domain and point to the VM public ip
- Access the web server using DNS name: http://demo.dryovnne.net/


